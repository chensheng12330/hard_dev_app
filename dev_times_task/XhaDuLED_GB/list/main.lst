C51 COMPILER V9.00   MAIN                                                                  09/17/2018 22:08:51 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE main.c ROM(SMALL) REGFILE(.\timer.ORC) BROWSE DEBUG OBJECTEXTEND PRINT(.\li
                    -st\main.lst)

line level    source

   1          
   2          /*************  功能说明        **************
   3          
   4          1.电源指示灯每10秒亮起一次
   5          2.杀菌灯光每天 1,4,7,10,13,16,19,22 整点时间段 启动照明.持续20分钟.
   6          3.按键按下,强制开启启动照明,.持续20分钟.
   7          
   8          ******************************************/
   9          
  10          
  11          /*************  本地常量声明    **************/
  12          #define MAIN_Fosc               12000000L
  13          #define g_light_on_time 20 ////默认为20分钟. 单位为分钟
  14          typedef         unsigned char   u8;
  15          typedef         unsigned int    u16;
  16          
  17          
  18          /*************  本地变量声明    **************/
  19          u8 g_hour=0;  //时
  20          u8 g_minute=0;//分
  21          u8 g_second=0;//秒
  22          u16 g_millisecond=0;//毫秒 
  23          //u8  g_addNum = 50; //50 //定时叠加数
  24          
  25          u8 g_key_flag=0; //按键状态,(1:按下  0:未按下)
  26          u8 g_key_time=0; //按键响应事件时间计时数.默认为20分钟. 单位为分钟
  27          
  28          u8 bIsOpen;
  29          /*************  本地函数声明    **************/
  30          
  31          void delay_ms(unsigned char ms);
  32          void printNowTime(void);
  33          /*************  外部函数和变量声明 *****************/
  34          
  35          
  36          
  37          /************************ IO口配置 ****************************/
  38          
  39          sfr P3M1  = 0xB1;       //P3M1.n,P3M0.n         =00--->Standard,        01--->push-pull
  40          sfr P3M0  = 0xB2;       //                                      =10--->pure input,      11--->open drain
  41          
  42          sfr IE    = 0xA8;
  43          sbit EA   = IE^7;       //中断允许总控制位
  44          sbit ET0  = IE^1;       //定时中断0允许控制位
  45          sfr TCON = 0x88;
  46          sbit TR0  = TCON^4;
  47          sfr TMOD  = 0x89;
  48          sfr     AUXR = 0x8E;
  49          sbit TF0  = TCON^5;
  50          sfr TH0  = 0x8C;
  51          sfr TL0  = 0x8A;
  52          
  53          sfr P3    = 0xB0;
  54          sbit ioWorkLED   = P3^3;  //工作指示灯
C51 COMPILER V9.00   MAIN                                                                  09/17/2018 22:08:51 PAGE 2   

  55          sbit ioSwitchLED = P3^2;  //控制杀菌灯
  56          sbit ioKEY       = P3^5;  //按键控杀菌灯
  57          
  58          //#include      "soft_uart.h"
  59          
  60          /******************** 主函数**************************/
  61          void main(void)
  62          {
  63   1      
  64   1              /*
  65   1              p3_2 : 用于工作指示灯
  66   1              p3_3 : 用于控制led照明显示
  67   1              */
  68   1              
  69   1              //io 脚配置      0000|0000   0000|1100
  70   1              P3M1 =  0x00;
  71   1              P3M0 =  0x0c;
  72   1      
  73   1              // 工作灯开始
  74   1              //ioWorkLED = 1;
  75   1      
  76   1              // 测试开启.
  77   1              //ioSwitchLED = 1;
  78   1              //ioKEY =1; //按键关闭
  79   1      
  80   1              //定时器配置 50ms 一次定时，定时器触发时，cpu进入唤醒时段.
  81   1              //Timer_config();
  82   1              AUXR &= 0x7F;           //定时器时钟12T模式
  83   1              TMOD &= 0xF0;           //设置定时器模式
  84   1              TMOD |= 0x01;           //设置定时器模式
  85   1              TL0 = 0xB0;             //设置定时初值
  86   1              TH0 = 0x3C;             //设置定时初值
  87   1              ET0 = 1;
  88   1              //TF0 = 0;              //清除TF0标志
  89   1              TR0 = 1;                //定时器0开始计时
  90   1      
  91   1              EA=1;
  92   1              
  93   1              while (1)
  94   1              {
  95   2      
  96   2                      //按键扫描
  97   2                      if(ioKEY == 0)                
  98   2                      //如果有键按下，则条件成立（有键按下，则s4为0；而 !key_flag为1）
  99   2                  {
 100   3                      delay_ms(10);//延时消抖
 101   3                      if(ioKEY == 0)                             //如果确定有键按下
 102   3                      {                      
 103   4                          //进行事件处理
 104   4                          g_key_flag = 1;
 105   4                          //启动亮灯计时
 106   4                          g_key_time=g_light_on_time;
 107   4              
 108   4                                      //PrintString("\r\n 按键已按下.");
 109   4                          return ;
 110   4                      }
 111   3                      }
 112   2      
 113   2                  //任务判断
 114   2                      
 115   2                               
 116   2                      if(g_key_flag != 1)
C51 COMPILER V9.00   MAIN                                                                  09/17/2018 22:08:51 PAGE 3   

 117   2                      {
 118   3                              switch(g_hour) {
 119   4                               case 0:
 120   4                               case 4:
 121   4                               case 7:
 122   4                               case 10:
 123   4                               case 13:
 124   4                               case 16:
 125   4                               case 19:
 126   4                               case 22:
 127   4                                      bIsOpen = 1;
 128   4                                      break;
 129   4                              default:
 130   4                                      bIsOpen = 0;
 131   4                                      break;
 132   4                              }
 133   3                      }
 134   2                      else{
 135   3                              bIsOpen = 1;    
 136   3                      }
 137   2                 /**/
 138   2                      //持续亮灯20分钟.
 139   2                      if(bIsOpen && (g_minute<g_light_on_time)) {
 140   3      
 141   3                              ioSwitchLED = 1;
 142   3                      }
 143   2                      else {
 144   3                              ioSwitchLED = 0;
 145   3                      }
 146   2      
 147   2                      /*
 148   2                      执行任务动作1
 149   2      
 150   2                      工作灯,每10秒闪一次
 151   2                      */
 152   2                      if(g_second%10 == 0){
 153   3                              ioWorkLED = 1;
 154   3                              delay_ms(2000);
 155   3                              ioWorkLED = 0;
 156   3                      }
 157   2                      else {
 158   3                              delay_ms(900);
 159   3                      }
 160   2      
 161   2                      //结束任务. 
 162   2              }
 163   1      }
 164          
 165          /********************* Timer0中断函数************************/
 166          void timer0_int (void) interrupt 1
 167          {
 168   1              //PrintString("\r\n T:");
 169   1              g_millisecond = g_millisecond + 50;
 170   1      
 171   1              if( g_millisecond >= 1000) { //满足一秒
 172   2                      g_millisecond = 0;
 173   2                      g_second++;
 174   2                      //printNowTime();
 175   2      
 176   2                      if(g_second >=60){
 177   3      
 178   3                              //满足一分钟
C51 COMPILER V9.00   MAIN                                                                  09/17/2018 22:08:51 PAGE 4   

 179   3                              //执行任务
 180   3                              ///////////////////////////
 181   3                              if(g_key_time<1){
 182   4                                      //复位.
 183   4                                      g_key_flag =0; //用于控制亮灯
 184   4                                      g_key_time =0; //重置按键亮灯计时时间
 185   4                              }
 186   3                              else{
 187   4                                      g_key_flag =1; //用于控制亮灯
 188   4                                      g_key_time--;
 189   4                              }                       
 190   3                              ///////////////////////////
 191   3      
 192   3      
 193   3                              ///时间累加
 194   3                              g_second =0;
 195   3                              g_minute ++;
 196   3      
 197   3                              if(g_minute >=60){
 198   4      
 199   4                                      //满足一小时
 200   4                                      g_minute =0;
 201   4                                      g_hour ++;
 202   4      
 203   4                                      if(g_hour ==24){
 204   5      
 205   5                                              //满足24小时
 206   5                                              g_hour =0;
 207   5                              
 208   5                                      }
 209   4                              
 210   4                              }
 211   3                      }
 212   2              }
 213   1      }
 214          
 215          void  delay_ms(unsigned char ms)
 216          {
 217   1           unsigned int i;
 218   1               do{
 219   2                    i = MAIN_Fosc / 13000;
 220   2                        while(--i)    ;   //14T per loop
 221   2           }while(--ms);
 222   1      }
 223          
 224           /*
 225          // TxSend(j/1000 + '0');
 226          void printNowTime(void) {
 227          
 228                  PrintString("\r\n 现在时间:");
 229          
 230                  TxSend('H');
 231                  //TxSend(g_hour+ '0');
 232                  TxSend(g_hour%100/10 + '0');
 233                  TxSend(g_hour%10+ '0');
 234          
 235          
 236                  TxSend(' ');
 237                  TxSend('M');
 238                  TxSend(g_minute%100/10 + '0');
 239                  TxSend(g_minute%10+ '0');
 240          
C51 COMPILER V9.00   MAIN                                                                  09/17/2018 22:08:51 PAGE 5   

 241                  TxSend(' ');
 242                  TxSend('S');
 243                  TxSend(g_second%100/10 + '0');
 244                  TxSend(g_second%10+ '0');
 245          
 246          ///*
 247                  TxSend(' ');
 248                  TxSend('U');
 249                  //TxSend(g_millisecond+ '0');
 250                  TxSend(g_millisecond%1000/100 + '0');
 251                  TxSend(g_millisecond%100/10 + '0');
 252                  TxSend(g_millisecond%10+ '0');
 253          
 254          
 255          //      PrintString("\r\n ");
 256          //}
 257          */


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    242    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      8    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
