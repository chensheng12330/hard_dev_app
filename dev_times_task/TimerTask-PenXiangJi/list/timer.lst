C51 COMPILER V9.00   TIMER                                                                 09/28/2018 23:20:13 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE TIMER
OBJECT MODULE PLACED IN timer.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE timer.c BROWSE DEBUG OBJECTEXTEND PRINT(.\list\timer.lst)

line level    source

   1          
   2          /*------------------------------------------------------------------*/
   3          /* --- STC MCU International Limited -------------------------------*/
   4          /* --- STC 1T Series MCU RC Demo -----------------------------------*/
   5          /* --- Mobile: (86)13922805190 -------------------------------------*/
   6          /* --- Fax: 86-0513-55012956,55012947,55012969 ---------------------*/
   7          /* --- Tel: 86-0513-55012928,55012929,55012966 ---------------------*/
   8          /* --- Web: www.GXWMCU.com -----------------------------------------*/
   9          /* --- QQ:  800003751 ----------------------------------------------*/
  10          /* If you want to use the program or the program referenced in the  */
  11          /* article, please specify in which data and procedures from STC    */
  12          /*------------------------------------------------------------------*/
  13          
  14          /*************  功能说明        **************
  15          
  16          本文件为STC15xxx系列的定时器初始化和中断程序,用户可以在这个文件中修改自己需要的中断程序.
  17          
  18          
  19          ******************************************/
  20          
  21          
  22          
  23          #include        "timer.h"
  24          
  25          
  26          
  27          /********************* Timer1中断函数************************/
  28          
  29          
  30          /********************* Timer2中断函数***********************
  31          void timer2_int (void) interrupt TIMER2_VECTOR
  32          {
  33                  P35 = ~P35;
  34          }
  35          */
  36          
  37          //========================================================================
  38          // 函数: u8     Timer_Inilize(u8 TIM, TIM_InitTypeDef *TIMx)
  39          // 描述: 定时器初始化程序.
  40          // 参数: TIMx: 结构参数,请参考timer.h里的定义.
  41          // 返回: 成功返回0, 空操作返回1,错误返回2.
  42          // 版本: V1.0, 2012-10-22
  43          //========================================================================
  44          u8      Timer_Inilize(u8 TIM, TIM_InitTypeDef *TIMx)
  45          {
  46   1              if(TIM > Timer2)        return 1;       //空操作
  47   1      
  48   1              if(TIM == Timer0)
  49   1              {
  50   2                      TR0 = 0;                //停止计数
  51   2                      if(TIMx->TIM_Interrupt == ENABLE)               ET0 = 1;        //允许中断
  52   2                      else                                                                    ET0 = 0;        //禁止中断
  53   2                      if(TIMx->TIM_Polity == PolityHigh)              PT0 = 1;        //高优先级中断
  54   2                      else                                                                    PT0 = 0;        //低优先级中断
  55   2                      if(TIMx->TIM_Mode >  TIM_16BitAutoReloadNoMask) return 2;       //错误
C51 COMPILER V9.00   TIMER                                                                 09/28/2018 23:20:13 PAGE 2   

  56   2                      TMOD = (TMOD & ~0x03) | TIMx->TIM_Mode; //工作模式,0: 16位自动重装, 1: 16位定时/计数, 2: 8位自动重装, 3:
             - 16位自动重装, 不可屏蔽中断
  57   2                      if(TIMx->TIM_ClkSource == TIM_CLOCK_12T)        AUXR &= ~0x80;  //12T
  58   2                      if(TIMx->TIM_ClkSource == TIM_CLOCK_1T)         AUXR |=  0x80;  //1T
  59   2                      if(TIMx->TIM_ClkSource == TIM_CLOCK_Ext)        TMOD |=  0x04;  //对外计数或分频
  60   2                      else                                                                            TMOD &= ~0x04;  //定时
  61   2                      if(TIMx->TIM_ClkOut == ENABLE)  INT_CLKO |=  0x01;      //输出时钟
  62   2                      else                                                    INT_CLKO &= ~0x01;      //不输出时钟
  63   2                      
  64   2                      TH0 = (u8)(TIMx->TIM_Value >> 8);
  65   2                      TL0 = (u8)TIMx->TIM_Value;
  66   2                      if(TIMx->TIM_Run == ENABLE)     TR0 = 1;        //开始运行
  67   2                      return  0;              //成功
  68   2              }
  69   1      
  70   1              if(TIM == Timer1)
  71   1              {
  72   2                      TR1 = 0;                //停止计数
  73   2                      if(TIMx->TIM_Interrupt == ENABLE)               ET1 = 1;        //允许中断
  74   2                      else                                                                    ET1 = 0;        //禁止中断
  75   2                      if(TIMx->TIM_Polity == PolityHigh)              PT1 = 1;        //高优先级中断
  76   2                      else                                                                    PT1 = 0;        //低优先级中断
  77   2                      if(TIMx->TIM_Mode >= TIM_16BitAutoReloadNoMask) return 2;       //错误
  78   2                      TMOD = (TMOD & ~0x30) | TIMx->TIM_Mode; //工作模式,0: 16位自动重装, 1: 16位定时/计数, 2: 8位自动重装
  79   2                      if(TIMx->TIM_ClkSource == TIM_CLOCK_12T)        AUXR &= ~0x40;  //12T
  80   2                      if(TIMx->TIM_ClkSource == TIM_CLOCK_1T)         AUXR |=  0x40;  //1T
  81   2                      if(TIMx->TIM_ClkSource == TIM_CLOCK_Ext)        TMOD |=  0x40;  //对外计数或分频
  82   2                      else                                                                            TMOD &= ~0x40;  //定时
  83   2                      if(TIMx->TIM_ClkOut == ENABLE)  INT_CLKO |=  0x02;      //输出时钟
  84   2                      else                                                    INT_CLKO &= ~0x02;      //不输出时钟
  85   2                      
  86   2                      TH1 = (u8)(TIMx->TIM_Value >> 8);
  87   2                      TL1 = (u8)TIMx->TIM_Value;
  88   2                      if(TIMx->TIM_Run == ENABLE)     TR1 = 1;        //开始运行
  89   2                      return  0;              //成功
  90   2              }
  91   1              /* 
  92   1              if(TIM == Timer2)               //Timer2,固定为16位自动重装, 中断无优先级
  93   1              {
  94   1                      AUXR &= ~(1<<4);        //停止计数
  95   1                      if(TIMx->TIM_Interrupt == ENABLE)                       IE2  |=  (1<<2);        //允许中断
  96   1                      else                                                                            IE2  &= ~(1<<2);        //禁止中断
  97   1                      if(TIMx->TIM_ClkSource >  TIM_CLOCK_Ext)        return 2;
  98   1                      if(TIMx->TIM_ClkSource == TIM_CLOCK_12T)        AUXR &= ~(1<<2);        //12T
  99   1                      if(TIMx->TIM_ClkSource == TIM_CLOCK_1T)         AUXR |=  (1<<2);        //1T
 100   1                      if(TIMx->TIM_ClkSource == TIM_CLOCK_Ext)        AUXR |=  (1<<3);        //对外计数或分频
 101   1                      else                                                                            AUXR &= ~(1<<3);        //定时
 102   1                      if(TIMx->TIM_ClkOut == ENABLE)  INT_CLKO |=  0x04;      //输出时钟
 103   1                      else                                                    INT_CLKO &= ~0x04;      //不输出时钟
 104   1      
 105   1                      TH2 = (u8)(TIMx->TIM_Value >> 8);
 106   1                      TL2 = (u8)TIMx->TIM_Value;
 107   1                      if(TIMx->TIM_Run == ENABLE)     AUXR |=  (1<<4);        //开始运行
 108   1                      return  0;              //成功
 109   1              }       */
 110   1              return 2;       //错误
 111   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    286    ----
   CONSTANT SIZE    =   ----    ----
C51 COMPILER V9.00   TIMER                                                                 09/28/2018 23:20:13 PAGE 3   

   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
