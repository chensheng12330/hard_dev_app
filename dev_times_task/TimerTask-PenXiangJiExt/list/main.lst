C51 COMPILER V9.00   MAIN                                                                  11/25/2018 22:59:03 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND PRINT(.\list\main.lst)

line level    source

   1          
   2          /*------------------------------------------------------------------*/
   3          /* --- STC MCU International Limited -------------------------------*/
   4          /* --- STC 1T Series MCU RC Demo -----------------------------------*/
   5          /* --- Mobile: (86)13922805190 -------------------------------------*/
   6          /* --- Fax: 86-0513-55012956,55012947,55012969 ---------------------*/
   7          /* --- Tel: 86-0513-55012928,55012929,55012966 ---------------------*/
   8          /* --- Web: www.GXWMCU.com -----------------------------------------*/
   9          /* --- QQ:  800003751 ----------------------------------------------*/
  10          /* If you want to use the program or the program referenced in the  */
  11          /* article, please specify in which data and procedures from STC    */
  12          /*------------------------------------------------------------------*/
  13          //#include "reg51.h"
  14          #include        "config.h"
  15          #include        "timer.h"
  16          #include        "GPIO.h"
  17          //#include      "soft_uart.h"
  18          #include        "delay.h"
  19          #include        "Exti.h"
  20          
  21          
  22          /*************  π¶ƒ‹Àµ√˜        **************
  23          
  24          ∏ƒ◊∞[◊‘∂Ø≈Áœ„ª˙]
  25          
  26          1°¢“ªÃÏ≈Á ±º‰…Ë÷√Œ™£∫7µ„£¨13µ„£¨19µ„
  27          2°¢
  28          T(io) ∞¥º¸”√”⁄√øÃÏ12µ„Ωœ◊º ±º‰£¨¥•∑¢º¥…Ë∂®µ±«∞  ±º‰Œ™12µ„.
  29          M ”√”⁄÷˜∂Ø¥•∑¢≈Áœ„ª˙‘À––“ª¥Œ°£
  30          S  πÿ±’µ±≥Ã–Ú‘À––.
  31          
  32          3°¢L1(¬Ãio0)œ‘ æµ±«∞◊¥Ã¨£¨
  33          10√Î…¡“ª¥Œ£¨±Ì æª˙∆˜∂® ±‘À––÷–°£
  34          ≥£¡¡±Ì æµÁ≥ÿ≤ª◊„°£
  35          
  36          L2(∫Ïio1)…¡“ª¥Œ£¨±Ì æ ±º‰Ωœ◊ºÕÍ≥…°£
  37          L2(∫Ï)…¡∂˛¥Œ£¨±Ì æº∆ ˝ª÷∏¥ÕÍ≥…°£ 
  38          L2(∫Ï)…¡»˝¥Œ£¨±Ì æπÿ±’∂® ±
  39          
  40          /*stc15f104w “˝Ω≈∞≤≈≈
  41          *********************************************************
  42          ◊‘∂Øƒ£ Ω  p3.4  -- ||--p3.3  ≈Áœ„ª˙∞¥º¸øÿ÷∆ ‰»Î
  43          ’˝µÁ‘¥       vcc    -- ||--p3.2   ±º‰÷ÿ÷√∞¥º¸øÿ÷∆ ‰»Î
  44          µÁª˙ø™πÿ  p3.5  -- ||--p3.1  ∫Ïµ∆
  45          ∏∫µÁ‘¥        gnd  -- ||--p3.0  ¬Ãµ∆
  46          *********************************************************
  47          
  48          */
  49          
  50          /******************************************/
  51          
  52          /*************  ±æµÿ≥£¡ø…˘√˜    **************/
  53          #define l2Num_TimeRest_1 1
  54          #define l2Num_MotoRun_2  2
  55          #define k_addNum 50 //50 //∂® ±µ˛º” ˝
C51 COMPILER V9.00   MAIN                                                                  11/25/2018 22:59:03 PAGE 2   

  56          #define k_moto_run_time (500) //500ms //µÁª˙∆Ù ±º‰÷µ°£
  57          
  58          /*************  ±æµÿ±‰¡ø…˘√˜    **************/
  59          u8 g_hour=6;  // ±
  60          u8  g_minute=59;//∑÷
  61          u8  g_second=50;//√Î
  62          u16 g_millisecond=0;//∫¡√Î 
  63          
  64          
  65          
  66          sbit ioOutForL1Green= P3^0;  //¬Ãµ∆£¨≥Ã–Ú‘À––÷∏ æµ∆
  67          sbit ioOutForL2Red  = P3^1;  //∫Ïµ∆£¨∞¥º¸œÏ”¶÷∏ æµ∆
  68          
  69          sbit ioInKeyForMoto = P3^2;//≈Áœ„ª˙¥•∑¢‘À–– ‰»Î  int0
  70          sbit ioInKeyForTime = P3^3; // ±º‰Ωœ◊º∞¥º¸ ‰»Î  int1
  71          
  72          
  73          sbit ioOutForMotoPower=P3^5;  //≈Áœ„ª˙µÁª˙∆Ù∂Øø™πÿIOø⁄.
  74          //sbit ioOutForMotoKey= P3^4;  //‘› ±≤ª◊ˆ¥¶¿Ì£¨±£¡ÙIOø⁄
  75          
  76          
  77          
  78          int g_moto_run_time=0; //µÁª˙∆Ù∂Ø‘À––∫Ûµƒ ±º‰÷µ
  79           
  80          typedef struct
  81          {
  82                  u8      sKeyForTime;  //÷ÿ÷√ ±º‰º¸◊¥Ã¨÷µ.  0: Œ¥∞¥œ¬  //1:“—∞¥œ¬
  83                  //u8    sKeyForRun;       //≥Ã–Úº¸◊¥Ã¨÷µ.  0: Œ¥∞¥œ¬  //1:“—∞¥œ¬
  84                  u8     sKeyForMoto;  //≈Áœ„ª˙º¸◊¥Ã¨÷µ.  0: Œ¥∞¥œ¬  //1:“—∞¥œ¬
  85          } KeyStateDef; //µ±«∞≥Ã–Ú∞¥º¸µƒ◊¥Ã¨,ƒ¨»œŒ™0 
  86          
  87          //»´æ÷∂‘œÛ
  88          KeyStateDef  g_allKeyState={0,0};
  89          
  90          
  91          /*************  ±æµÿ∫Ø ˝…˘√˜    **************/
  92          
  93          //void mintueAction(void);
  94          
  95          void secondAction(void);
  96          
  97          //void printNowTime(void);
  98          
  99          void key_scan(void);
 100          
 101          void l2ShowWithNum(u8 num);
 102          
 103          void motoStart(void);
 104          /*************  Õ‚≤ø∫Ø ˝∫Õ±‰¡ø…˘√˜ *****************/
 105          void    EXTI_config(void)
 106          {
 107   1              EXTI_InitTypeDef        EXTI_InitStructure;                                     //Ω·ππ∂®“Â
 108   1      
 109   1          //≥ı ºªØINT0
 110   1              EXTI_InitStructure.EXTI_Mode      = EXT_MODE_Fall;      //÷–∂œƒ£ Ω,  EXT_MODE_RiseFall, EXT_MODE_Fall
 111   1              EXTI_InitStructure.EXTI_Polity    = PolityHigh;                 //÷–∂œ”≈œ»º∂,   PolityLow,PolityHigh
 112   1              EXTI_InitStructure.EXTI_Interrupt = ENABLE;                             //÷–∂œ‘ –Ì,     ENABLEªÚDISABLE
 113   1              Ext_Inilize(EXT_INT0,&EXTI_InitStructure);      
 114   1          
 115   1          //≥ı ºªØINT1
 116   1              EXTI_InitStructure.EXTI_Mode      = EXT_MODE_Fall;      //÷–∂œƒ£ Ω,     EXT_MODE_RiseFall, EXT_MODE_Fall
 117   1              EXTI_InitStructure.EXTI_Polity    = PolityLow;                  //÷–∂œ”≈œ»º∂,   PolityLow,PolityHigh
C51 COMPILER V9.00   MAIN                                                                  11/25/2018 22:59:03 PAGE 3   

 118   1              //EXTI_InitStructure.EXTI_Interrupt = ENABLE;                           //÷–∂œ‘ –Ì,     ENABLEªÚDISABLE
 119   1              Ext_Inilize(EXT_INT1,&EXTI_InitStructure);                              //      EXT_INT0,EXT_INT1,EXT_INT2,EXT_INT3,EXT_INT4
 120   1      
 121   1      /*
 122   1          //≥ı ºªØINT3
 123   1              EXTI_InitStructure.EXTI_Mode      = EXT_MODE_Fall;      //÷–∂œƒ£ Ω,     EXT_MODE_RiseFall, EXT_MODE_Fall
 124   1              EXTI_InitStructure.EXTI_Polity    = PolityLow;                  //÷–∂œ”≈œ»º∂,   PolityLow,PolityHigh
 125   1              EXTI_InitStructure.EXTI_Interrupt = ENABLE;                             //÷–∂œ‘ –Ì,     ENABLEªÚDISABLE
 126   1              Ext_Inilize(EXT_INT3,&EXTI_InitStructure);
 127   1              */
 128   1      }
 129          
 130          
 131          
 132          /************************ IOø⁄≈‰÷√ ****************************/
 133          void    GPIO_config(void)
 134          {
 135   1              GPIO_InitTypeDef        GPIO_InitStructure;                             //Ω·ππ∂®“Â
 136   1              GPIO_InitStructure.Pin  = GPIO_Pin_0 | GPIO_Pin_1| GPIO_Pin_4|GPIO_Pin_5;       //÷∏∂®“™≥ı ºªØµƒIO, 
 137   1              // GPIO_Pin_2 ~ GPIO_Pin_3, ªÚ≤Ÿ◊˜
 138   1              GPIO_InitStructure.Mode = GPIO_OUT_PP;                          //÷∏∂®IOµƒ ‰»ÎªÚ ‰≥ˆ∑Ω Ω,GPIO_PullUp,GPIO_HighZ,GPIO_OUT_OD,GPI
             -O_OUT_PP
 139   1              GPIO_Inilize(GPIO_P3,&GPIO_InitStructure);                      //≥ı ºªØ
 140   1      
 141   1      
 142   1              GPIO_InitStructure.Pin   = GPIO_Pin_2 |GPIO_Pin_3  ;    //÷∏∂®“™≥ı ºªØµƒIO,
 143   1              GPIO_InitStructure.Mode = GPIO_PullUp;                          //÷∏∂®IOµƒ ‰»ÎªÚ ‰≥ˆ∑Ω Ω,GPIO_PullUp,GPIO_HighZ,GPIO_OUT_OD,GPI
             -O_OUT_PP
 144   1              GPIO_Inilize(GPIO_P3,&GPIO_InitStructure);      
 145   1              
 146   1      }
 147          
 148          /************************ ∂® ±∆˜≈‰÷√ ****************************/
 149          void    Timer_config(void)
 150          {
 151   1              TIM_InitTypeDef         TIM_InitStructure;                                      //Ω·ππ∂®“Â
 152   1              TIM_InitStructure.TIM_Mode      = TIM_16BitAutoReload;  //÷∏∂®π§◊˜ƒ£ Ω,   TIM_16BitAutoReload,TIM_16Bit,TI
             -M_8BitAutoReload,TIM_16BitAutoReloadNoMask
 153   1              TIM_InitStructure.TIM_Polity    = PolityHigh;                   //÷∏∂®÷–∂œ”≈œ»º∂, PolityHigh,PolityLow
 154   1              TIM_InitStructure.TIM_Interrupt = ENABLE;                               //÷–∂œ «∑Ò‘ –Ì,   ENABLEªÚDISABLE
 155   1              TIM_InitStructure.TIM_ClkSource = TIM_CLOCK_12T;                        //÷∏∂® ±÷”‘¥,     TIM_CLOCK_1T,TIM_CLOCK_12T,TIM_CLOCK
             -_Ext
 156   1              TIM_InitStructure.TIM_ClkOut    = DISABLE;                              // «∑Ò ‰≥ˆ∏ﬂÀŸ¬ˆ≥Â, ENABLEªÚDISABLE
 157   1              TIM_InitStructure.TIM_Value     =  0x3cb0;//65536UL - (50.0/1000.0 * MAIN_Fosc/12.0);           
 158   1              // //≥ı÷µ,50∫¡√Î“ª¥Œ÷–∂œ.
 159   1              TIM_InitStructure.TIM_Run       = ENABLE;                               // «∑Ò≥ı ºªØ∫Û∆Ù∂Ø∂® ±∆˜, ENABLEªÚDISABLE
 160   1              Timer_Inilize(Timer0,&TIM_InitStructure);                               //≥ı ºªØTimer0    Timer0,Timer1,Timer2
 161   1      
 162   1      }
 163          
 164          
 165          /******************** ÷˜∫Ø ˝**************************/
 166          void main(void)
 167          {
 168   1              //µÕµÁ—πºÏ≤‚±£ª§
 169   1              PCON &= ~LVDF;                  //…œµÁ∫Û–Ë“™«ÂLVD÷–∂œ±Í÷æŒª
 170   1          ELVD = 1;                       // πƒ‹LVD÷–∂œ
 171   1          
 172   1              //io Ω≈≈‰÷√
 173   1              GPIO_config();
 174   1      
 175   1          //»´æ÷±‰¡ø≥ı πªØ
C51 COMPILER V9.00   MAIN                                                                  11/25/2018 22:59:03 PAGE 4   

 176   1              // π§◊˜µ∆ø™ º
 177   1          ioOutForL1Green=ioInKeyForMoto=ioInKeyForTime=1; //keyº¸¿≠∏ﬂ
 178   1      
 179   1          // ‰≥ˆioΩ≈œ»πÿ±’
 180   1          ioOutForL2Red =ioOutForMotoPower = 0;
 181   1      
 182   1          //ioOutForMotoKey=1; //¥•∑¢≈Áœ„ª˙µƒ∞¥º¸ø™πÿ. µÕŒªø™£¨∏ﬂŒªπÿ.
 183   1              
 184   1                 
 185   1          //g_allKeyState = {0,0,0};
 186   1      
 187   1      
 188   1          //ø™∆Ù“˝Ω≈p32 p33µƒÕ‚≤ø÷–∂œ,œ¬Ωµ—ÿ÷–∂œ.
 189   1          //EXTI_config();
 190   1          
 191   1              //∂® ±∆˜≈‰÷√ 50ms “ª¥Œ∂® ±£¨∂® ±∆˜¥•∑¢ ±£¨cpuΩ¯»ÎªΩ–— ±∂Œ.
 192   1              Timer_config();
 193   1      
 194   1              EA = 1;
 195   1                       
 196   1              //PrintString("\r\n ø™ ºπ§◊˜¡À... = ");
 197   1      
 198   1              while (1)
 199   1              {
 200   2                      key_scan();
 201   2      
 202   2                              /*
 203   2                      ÷¥––»ŒŒÒ∂Ø◊˜1
 204   2      
 205   2                      “ªÃÏ≈Á ±º‰…Ë÷√Œ™£∫7µ„£¨13µ„£¨19µ„(’˚)
 206   2                      */
 207   2                      switch(g_hour){
 208   3                              case 7:
 209   3                              case 13:
 210   3                              case 19:
 211   3                                  {
 212   4                                          if( g_minute==0 && g_second ==0 && 
 213   4                                          g_millisecond<=50 )
 214   4                                           {
 215   5                                                    motoStart();
 216   5                                              }
 217   4                                  }
 218   3                                  break;
 219   3                                  
 220   3                               default:
 221   3                                  break;
 222   3                          }
 223   2      
 224   2              }
 225   1      }
 226          
 227          /***ƒ⁄≤øπ¶ƒ‹∫Ø ˝***/
 228          
 229          // ∞¥º¸¥¶¿Ìπ¶ƒ‹
 230          void key_scan(void) {
 231   1      
 232   1              //moto   
 233   1              
 234   1               if(ioInKeyForMoto==0){
 235   2               delay_ms(20);
 236   2                 while(ioInKeyForMoto==0);
 237   2                 //
C51 COMPILER V9.00   MAIN                                                                  11/25/2018 22:59:03 PAGE 5   

 238   2                 //¥•∑¢≈Áœ„ª˙π§◊˜
 239   2                      motoStart();
 240   2                      l2ShowWithNum(l2Num_MotoRun_2);
 241   2              }
 242   1      
 243   1              //time           ioInKeyForTime
 244   1              if(ioInKeyForTime==0){
 245   2               delay_ms(20);  
 246   2                 while(ioInKeyForTime==0);
 247   2                 //
 248   2                 //÷ÿ÷√ ±º‰Œ™12µ„.
 249   2                      
 250   2                      g_minute=g_second=g_millisecond =59;
 251   2                      g_hour = 7;
 252   2      
 253   2              l2ShowWithNum(l2Num_TimeRest_1);
 254   2              }
 255   1                                        
 256   1      
 257   1       /*
 258   1              if(g_allKeyState.sKeyForMoto == 1) {
 259   1                      //«Âø’‘≠◊¥Ã¨
 260   1                      g_allKeyState.sKeyForMoto = 0;
 261   1      
 262   1                      
 263   1                      
 264   1              }
 265   1      
 266   1              if(g_allKeyState.sKeyForRun== 1) {
 267   1      
 268   1                      //Õ£÷πAPP‘À––
 269   1                      while(g_allKeyState.sKeyForRun){;};
 270   1                      
 271   1                      //«Âø’‘≠◊¥Ã¨
 272   1                      //g_allKeyState.sKeyForRun = 0;
 273   1              }
 274   1      
 275   1              if(g_allKeyState.sKeyForTime== 1) {
 276   1                      //«Âø’‘≠◊¥Ã¨
 277   1                      g_allKeyState.sKeyForTime = 0;
 278   1      
 279   1                      
 280   1                      
 281   1              }       
 282   1      
 283   1              */
 284   1      }
 285          
 286          //¡¡µ∆œÏ”¶
 287          /*
 288          3°¢L1(¬Ãio0)œ‘ æµ±«∞◊¥Ã¨£¨
 289          10√Î…¡“ª¥Œ£¨±Ì æª˙∆˜∂® ±‘À––÷–°£
 290          ≥£¡¡±Ì æµÁ≥ÿ≤ª◊„°£
 291          
 292          L2(∫Ïio1)…¡“ª¥Œ£¨±Ì æ ±º‰Ωœ◊ºÕÍ≥…°£
 293          L2(∫Ï)…¡∂˛¥Œ£¨±Ì æ¥•∑¢≈Áœ„ª˙π§◊˜°£ 
 294          L2(∫Ï)…¡»˝¥Œ£¨±Ì æπÿ±’APP‘À––
 295          */ 
 296          
 297          void l2ShowWithNum(u8 num)
 298          {
 299   1              int i;
C51 COMPILER V9.00   MAIN                                                                  11/25/2018 22:59:03 PAGE 6   

 300   1          //PrintString("\r\n l2ShowWithNum.");
 301   1                      
 302   1              for(i=0; i<num; i++)
 303   1              {
 304   2                      delay_ms(100);
 305   2                      ioOutForL2Red = 1;
 306   2                      delay_ms(100);
 307   2                      ioOutForL2Red = 0;
 308   2      
 309   2              }       /**/
 310   1      }       
 311          
 312          /*µÁª˙øÿ÷∆
 313          
 314          1.¥Úø™p34,      (10√Î) ∫Ûπÿ±’(œ‡µ±”⁄ø™πÿµÁ‘¥)
 315          2.µ»¥˝≈Áœ„ª˙∆Ù∂Ø,‘º(1√Î)÷”,º¥8(k_moto_run_time-2)√Î ±∆Ù∂Ø≤Ÿ◊˜.
 316          3.¥Úø™p35, 20us √Îπÿ±’(ƒ£À∆∞¥º¸)
 317          */
 318          void motoStart(void) {
 319   1      
 320   1                              //∆Ù∂ØµÁª˙≥Ã–Ú
 321   1                              ioOutForL2Red = 1;
 322   1                              ioOutForMotoPower = 1; //ø™∆ÙµÁ‘¥
 323   1              
 324   1                      delay_ms(400);
 325   1              
 326   1                      ioOutForL2Red = 0; //πÿµÁª˙‘À––÷∏ æµ∆
 327   1                       //πÿ±’µÁª˙µÁ‘¥
 328   1                       ioOutForMotoPower= 0;
 329   1                       g_moto_run_time=0;
 330   1                   
 331   1          //PrintString("\r\n motoStart. ");
 332   1      }
 333          
 334          //void milliAction(void){
 335          //       
 336          //        if(g_moto_run_time==0){
 337          //                                //ioOutForMotoPower= 0;
 338          //        }
 339          //      else {
 340          //
 341          //                        
 342          //                       
 343          //             }
 344          //
 345          //        
 346          //
 347          //        return ;   
 348          //}
 349          
 350          void secondAction(void) {
 351   1              //PrintString("\r\n secondAction... ");
 352   1              //printNowTime();
 353   1          
 354   1              if(g_second%10 == 0){   //π§◊˜÷∏ æµ∆(¬Ã)
 355   2                      ioOutForL1Green = 1;
 356   2                      delay_ms(50);
 357   2                      ioOutForL1Green = 0;
 358   2              }
 359   1      }
 360          
 361          
C51 COMPILER V9.00   MAIN                                                                  11/25/2018 22:59:03 PAGE 7   

 362          /********************* Timer0÷–∂œ∫Ø ˝************************/
 363          void timer0_int (void) interrupt TIMER0_VECTOR
 364          {
 365   1              g_millisecond += k_addNum;
 366   1      
 367   1         //50m“ª¥Œ.
 368   1      
 369   1      //   if(g_millisecond>400){
 370   1      //               
 371   1      //   }
 372   1      
 373   1              if( g_millisecond>= 1000) { //¬˙◊„“ª√Î
 374   2                      g_millisecond = 0;
 375   2              
 376   2                      secondAction();
 377   2                      //milliAction();
 378   2                      g_second++;
 379   2      
 380   2                      if(g_second >=60){
 381   3      
 382   3                               g_second =0;
 383   3      
 384   3                              //¬˙◊„“ª∑÷÷”
 385   3                              //mintueAction();
 386   3                              if( g_minute==0 && g_second ==0 && g_millisecond==0 )
 387   3                       {
 388   4                          //’˚µ„±® ±.
 389   4                                  ioOutForL2Red = 1;
 390   4                                      
 391   4              
 392   4                       }
 393   3                               else {
 394   4                                      ioOutForL2Red = 0;
 395   4                               }
 396   3                              
 397   3                              
 398   3                              g_minute ++;
 399   3      
 400   3                              if(g_minute >=60){
 401   4      
 402   4                                      //¬˙◊„“ª–° ±
 403   4                                      g_minute =0;
 404   4                                      g_hour ++;
 405   4      
 406   4                                      if(g_hour >=24){
 407   5      
 408   5                                              //¬˙◊„24–° ±
 409   5                                              g_hour =0;
 410   5                              
 411   5                                      }
 412   4                              
 413   4                              }
 414   3                      }
 415   2              }
 416   1      }
 417          
 418          /*
 419          sbit ioInKeyForTime = P3^2; // ±º‰Ωœ◊º∞¥º¸ ‰»Î  int0
 420          sbit ioInKeyForRun  = P3^3;//≥Ã–Ú «∑Ò‘À–– ‰»Î   int1
 421          sbit ioInKeyForMoto =P3^5;//≈Áœ„ª˙¥•∑¢‘À–– ‰»Î  int3
 422          */
 423          
C51 COMPILER V9.00   MAIN                                                                  11/25/2018 22:59:03 PAGE 8   

 424          /********************* INT0÷–∂œ∫Ø ˝ *************************/
 425          void INT0_int (void) interrupt INT0_VECTOR              //Ω¯÷–∂œ ±“—æ≠«Â≥˝±Í÷æ
 426          {
 427   1              //WakeUpSource = 1;     //±Íº«INT0ªΩ–—
 428   1              //EX0 = 0;                      //INT0 Disable
 429   1      
 430   1              IE0  = 0;                       //Õ‚÷–∂œ0±Í÷æŒª
 431   1              while(ioInKeyForMoto==0);
 432   1              //g_allKeyState.sKeyForMoto= 1;
 433   1              //PrintString("\r\n Õ‚≤ø÷–∂œ0.");
 434   1              
 435   1              EX0 = 1;
 436   1      
 437   1              
 438   1      }
 439          
 440          /********************* INT1÷–∂œ∫Ø ˝ *************************/
 441          void INT1_int (void) interrupt INT1_VECTOR              //Ω¯÷–∂œ ±“—æ≠«Â≥˝±Í÷æ
 442          {
 443   1              //Ω¯»Î÷–∂œ ±£¨ø…“‘∞—int1÷–∂œπÿ±’°£
 444   1              EX1 = 0;        
 445   1              //tfWakeUpSource = 2;   //±Íº«INT1ªΩ–—
 446   1              //EX1 = 0;                      //INT1 Disable
 447   1              IE1  = 0;                       //Õ‚÷–∂œ1±Í÷æŒª
 448   1      
 449   1              if(ioInKeyForTime!=0) 
 450   1              {        
 451   2                      EX1 = 1;
 452   2                      return;
 453   2              }
 454   1      
 455   1              g_allKeyState.sKeyForTime= 1;
 456   1              g_allKeyState.sKeyForMoto= 1;
 457   1              //¥¶¿ÌÕÍ÷–∂œ ¬º˛∫Û£¨ø…“‘∞— int1÷–∂œø™∆Ù£¨∑¿÷π∂‡¥ŒΩ¯»Î°£
 458   1      
 459   1         // PrintString("\r\n Õ‚≤ø÷–∂œ1.—” ±1√Î");
 460   1         // delay_ms(2000);
 461   1          while(ioInKeyForTime==0);
 462   1              EX1 = 1;          //≥Ã–Úº¸◊¥Ã¨÷µ.  0: Œ¥∞¥œ¬  //1:“—∞¥œ¬
 463   1        
 464   1      }
 465          
 466          /********************* INT3÷–∂œ∫Ø ˝ ***********************
 467          void INT3_int  (void) interrupt INT3_VECTOR
 468          {
 469              PrintString("\r\n Õ‚≤ø÷–∂œ3.—” ±1√Î");
 470          
 471          //
 472              INT_CLKO |=  (1 << 5);  //‘ –Ì÷–∂œ  
 473              INT_CLKO &= ~(1 << 5);  //Ω˚÷π÷–∂œ
 474          ///
 475                  //EX3 = 0;      
 476              //IE1  = 0; 
 477          
 478                  g_allKeyState.sKeyForMoto= 1;
 479          }
 480          */
 481          
 482          ///µÕµÁ—π÷–∂œ∫Ø ˝
 483          //»Áπ˚µÕµÁ—π£¨Ω´             LVD_VECTOR         6
 484          void LVD_ISR() interrupt 6 using 1
 485          {       
C51 COMPILER V9.00   MAIN                                                                  11/25/2018 22:59:03 PAGE 9   

 486   1              //
 487   1              ioOutForL2Red   = 1; //≥£¡¡£¨±Ì æµÁ—π≤ª◊„
 488   1              ioOutForL1Green= 0; //œ®µ∆
 489   1              ioOutForMotoPower =0; //«ø÷∆Õ£÷π‘À◊™.
 490   1      
 491   1              PCON &= ~LVDF;                  //œÚPCON.5–¥0«ÂLVD÷–∂œ
 492   1      
 493   1              //PCON |= 0x02;               //Ω¯»ÎµÙµÁƒ£ Ω
 494   1      }
 495          
 496          /*
 497          void printNowTime(void) {
 498          
 499                  PrintString("\r\n ....");
 500          
 501                  TxSend('H');
 502                  //TxSend(g_hour+ '0');
 503                  TxSend(g_hour%100/10 + '0');
 504                  TxSend(g_hour%10+ '0');
 505                  
 506          
 507                  TxSend(' ');
 508                  TxSend('M');
 509                  TxSend(g_minute%100/10 + '0');
 510                  TxSend(g_minute%10+ '0');
 511          
 512                  TxSend(' ');
 513                  TxSend('S');
 514                  //TxSend(g_second+ '0');
 515                  TxSend(g_second%100/10 + '0');
 516                  TxSend(g_second%10+ '0');
 517          
 518          //
 519                  TxSend(' ');
 520                  TxSend('U');
 521                  //TxSend(g_millisecond+ '0');
 522                  TxSend(g_millisecond%1000/100 + '0');
 523                  TxSend(g_millisecond%100/10 + '0');
 524                  TxSend(g_millisecond%10+ '0');
 525          //
 526                  
 527                  PrintString("\r\n ");
 528          }
 529          */
 530          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    493    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      9      16
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
