C51 COMPILER V9.00   MAIN                                                                  11/04/2018 22:12:36 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND PRINT(.\list\main.lst)

line level    source

   1          
   2          /*------------------------------------------------------------------*/
   3          /* --- STC MCU International Limited -------------------------------*/
   4          /* --- STC 1T Series MCU RC Demo -----------------------------------*/
   5          /* --- Mobile: (86)13922805190 -------------------------------------*/
   6          /* --- Fax: 86-0513-55012956,55012947,55012969 ---------------------*/
   7          /* --- Tel: 86-0513-55012928,55012929,55012966 ---------------------*/
   8          /* --- Web: www.GXWMCU.com -----------------------------------------*/
   9          /* --- QQ:  800003751 ----------------------------------------------*/
  10          /* If you want to use the program or the program referenced in the  */
  11          /* article, please specify in which data and procedures from STC    */
  12          /*------------------------------------------------------------------*/
  13          //#include "reg51.h"
  14          #include        "config.h"
  15          #include        "timer.h"
  16          #include        "GPIO.h"
  17          //#include      "soft_uart.h"
  18          #include        "delay.h"
  19          #include        "Exti.h"
  20          
  21          
  22          /*************  π¶ƒ‹Àµ√˜        **************
  23          
  24          ∏ƒ◊∞[◊‘∂Ø≈Áœ„ª˙]
  25          
  26          1°¢“ªÃÏ≈Á ±º‰…Ë÷√Œ™£∫7µ„£¨13µ„£¨19µ„
  27          2°¢
  28          T(io) ∞¥º¸”√”⁄√øÃÏ12µ„Ωœ◊º ±º‰£¨¥•∑¢º¥…Ë∂®µ±«∞  ±º‰Œ™12µ„.
  29          M ”√”⁄÷˜∂Ø¥•∑¢≈Áœ„ª˙‘À––“ª¥Œ°£
  30          S  πÿ±’µ±≥Ã–Ú‘À––.
  31          
  32          3°¢L1(¬Ãio0)œ‘ æµ±«∞◊¥Ã¨£¨
  33          10√Î…¡“ª¥Œ£¨±Ì æª˙∆˜∂® ±‘À––÷–°£
  34          ≥£¡¡±Ì æµÁ≥ÿ≤ª◊„°£
  35          
  36          L2(∫Ïio1)…¡“ª¥Œ£¨±Ì æ ±º‰Ωœ◊ºÕÍ≥…°£
  37          L2(∫Ï)…¡∂˛¥Œ£¨±Ì æº∆ ˝ª÷∏¥ÕÍ≥…°£ 
  38          L2(∫Ï)…¡»˝¥Œ£¨±Ì æπÿ±’∂® ±
  39          
  40          /*stc15f104w “˝Ω≈∞≤≈≈
  41          *********************************************************
  42          ◊‘∂Øƒ£ Ω  p3.4  -- ||--p3.3  ≈Áœ„ª˙∞¥º¸øÿ÷∆ ‰»Î
  43          ’˝µÁ‘¥       vcc    -- ||--p3.2   ±º‰÷ÿ÷√∞¥º¸øÿ÷∆ ‰»Î
  44          µÁª˙ø™πÿ  p3.5  -- ||--p3.1  ∫Ïµ∆
  45          ∏∫µÁ‘¥        gnd  -- ||--p3.0  ¬Ãµ∆
  46          *********************************************************
  47          
  48          */
  49          
  50          /******************************************/
  51          
  52          /*************  ±æµÿ≥£¡ø…˘√˜    **************/
  53          #define l2Num_TimeRest_1 1
  54          #define l2Num_MotoRun_2  2
  55          #define k_addNum 50 //50 //∂® ±µ˛º” ˝
C51 COMPILER V9.00   MAIN                                                                  11/04/2018 22:12:36 PAGE 2   

  56          #define k_moto_run_time (k_addNum*10) //500ms //µÁª˙∆Ù ±º‰÷µ°£
  57          
  58          /*************  ±æµÿ±‰¡ø…˘√˜    **************/
  59          u8 g_hour=6;  // ±
  60          u8  g_minute=59;//∑÷
  61          u8  g_second=50;//√Î
  62          u16 g_millisecond=0;//∫¡√Î 
  63          
  64          
  65          
  66          sbit ioOutForL1Green= P3^0;  //¬Ãµ∆£¨≥Ã–Ú‘À––÷∏ æµ∆
  67          sbit ioOutForL2Red  = P3^1;  //∫Ïµ∆£¨∞¥º¸œÏ”¶÷∏ æµ∆
  68          
  69          sbit ioInKeyForMoto = P3^2;//≈Áœ„ª˙¥•∑¢‘À–– ‰»Î  int0
  70          sbit ioInKeyForTime = P3^3; // ±º‰Ωœ◊º∞¥º¸ ‰»Î  int1
  71          
  72          
  73          sbit ioOutForMotoPower=P3^5;  //≈Áœ„ª˙µÁª˙∆Ù∂Øø™πÿIOø⁄.
  74          //sbit ioOutForMotoKey= P3^4;  //‘› ±≤ª◊ˆ¥¶¿Ì£¨±£¡ÙIOø⁄
  75          
  76          
  77          
  78          int g_moto_run_time=-1; //µÁª˙∆Ù∂Ø‘À––∫Ûµƒ ±º‰÷µ
  79           
  80          typedef struct
  81          {
  82                  u8      sKeyForTime;  //÷ÿ÷√ ±º‰º¸◊¥Ã¨÷µ.  0: Œ¥∞¥œ¬  //1:“—∞¥œ¬
  83                  //u8    sKeyForRun;       //≥Ã–Úº¸◊¥Ã¨÷µ.  0: Œ¥∞¥œ¬  //1:“—∞¥œ¬
  84                  u8     sKeyForMoto;  //≈Áœ„ª˙º¸◊¥Ã¨÷µ.  0: Œ¥∞¥œ¬  //1:“—∞¥œ¬
  85          } KeyStateDef; //µ±«∞≥Ã–Ú∞¥º¸µƒ◊¥Ã¨,ƒ¨»œŒ™0 
  86          
  87          //»´æ÷∂‘œÛ
  88          KeyStateDef  g_allKeyState={0,0};
  89          
  90          
  91          /*************  ±æµÿ∫Ø ˝…˘√˜    **************/
  92          
  93          //void mintueAction(void);
  94          
  95          void secondAction(void);
  96          
  97          //void printNowTime(void);
  98          
  99          void key_scan(void);
 100          
 101          void l2ShowWithNum(u8 num);
 102          
 103          void motoStart(void);
 104          /*************  Õ‚≤ø∫Ø ˝∫Õ±‰¡ø…˘√˜ *****************/
 105          void    EXTI_config(void)
 106          {
 107   1              EXTI_InitTypeDef        EXTI_InitStructure;                                     //Ω·ππ∂®“Â
 108   1      
 109   1          //≥ı ºªØINT0
 110   1              EXTI_InitStructure.EXTI_Mode      = EXT_MODE_Fall;      //÷–∂œƒ£ Ω,  EXT_MODE_RiseFall, EXT_MODE_Fall
 111   1              EXTI_InitStructure.EXTI_Polity    = PolityHigh;                 //÷–∂œ”≈œ»º∂,   PolityLow,PolityHigh
 112   1              EXTI_InitStructure.EXTI_Interrupt = ENABLE;                             //÷–∂œ‘ –Ì,     ENABLEªÚDISABLE
 113   1              Ext_Inilize(EXT_INT0,&EXTI_InitStructure);      
 114   1          
 115   1          //≥ı ºªØINT1
 116   1              EXTI_InitStructure.EXTI_Mode      = EXT_MODE_Fall;      //÷–∂œƒ£ Ω,     EXT_MODE_RiseFall, EXT_MODE_Fall
 117   1              EXTI_InitStructure.EXTI_Polity    = PolityLow;                  //÷–∂œ”≈œ»º∂,   PolityLow,PolityHigh
C51 COMPILER V9.00   MAIN                                                                  11/04/2018 22:12:36 PAGE 3   

 118   1              //EXTI_InitStructure.EXTI_Interrupt = ENABLE;                           //÷–∂œ‘ –Ì,     ENABLEªÚDISABLE
 119   1              Ext_Inilize(EXT_INT1,&EXTI_InitStructure);                              //      EXT_INT0,EXT_INT1,EXT_INT2,EXT_INT3,EXT_INT4
 120   1      
 121   1      /*
 122   1          //≥ı ºªØINT3
 123   1              EXTI_InitStructure.EXTI_Mode      = EXT_MODE_Fall;      //÷–∂œƒ£ Ω,     EXT_MODE_RiseFall, EXT_MODE_Fall
 124   1              EXTI_InitStructure.EXTI_Polity    = PolityLow;                  //÷–∂œ”≈œ»º∂,   PolityLow,PolityHigh
 125   1              EXTI_InitStructure.EXTI_Interrupt = ENABLE;                             //÷–∂œ‘ –Ì,     ENABLEªÚDISABLE
 126   1              Ext_Inilize(EXT_INT3,&EXTI_InitStructure);
 127   1              */
 128   1      }
 129          
 130          
 131          
 132          /************************ IOø⁄≈‰÷√ ****************************/
 133          void    GPIO_config(void)
 134          {
 135   1              GPIO_InitTypeDef        GPIO_InitStructure;                             //Ω·ππ∂®“Â
 136   1              GPIO_InitStructure.Pin  = GPIO_Pin_0 | GPIO_Pin_1| GPIO_Pin_4|GPIO_Pin_5;       //÷∏∂®“™≥ı ºªØµƒIO, 
 137   1              // GPIO_Pin_2 ~ GPIO_Pin_3, ªÚ≤Ÿ◊˜
 138   1              GPIO_InitStructure.Mode = GPIO_OUT_PP;                          //÷∏∂®IOµƒ ‰»ÎªÚ ‰≥ˆ∑Ω Ω,GPIO_PullUp,GPIO_HighZ,GPIO_OUT_OD,GPI
             -O_OUT_PP
 139   1              GPIO_Inilize(GPIO_P3,&GPIO_InitStructure);                      //≥ı ºªØ
 140   1      
 141   1      
 142   1              GPIO_InitStructure.Pin   = GPIO_Pin_2 |GPIO_Pin_3  ;    //÷∏∂®“™≥ı ºªØµƒIO,
 143   1              GPIO_InitStructure.Mode = GPIO_PullUp;                          //÷∏∂®IOµƒ ‰»ÎªÚ ‰≥ˆ∑Ω Ω,GPIO_PullUp,GPIO_HighZ,GPIO_OUT_OD,GPI
             -O_OUT_PP
 144   1              GPIO_Inilize(GPIO_P3,&GPIO_InitStructure);      
 145   1              
 146   1      }
 147          
 148          /************************ ∂® ±∆˜≈‰÷√ ****************************/
 149          void    Timer_config(void)
 150          {
 151   1              TIM_InitTypeDef         TIM_InitStructure;                                      //Ω·ππ∂®“Â
 152   1              TIM_InitStructure.TIM_Mode      = TIM_16BitAutoReload;  //÷∏∂®π§◊˜ƒ£ Ω,   TIM_16BitAutoReload,TIM_16Bit,TI
             -M_8BitAutoReload,TIM_16BitAutoReloadNoMask
 153   1              TIM_InitStructure.TIM_Polity    = PolityHigh;                   //÷∏∂®÷–∂œ”≈œ»º∂, PolityHigh,PolityLow
 154   1              TIM_InitStructure.TIM_Interrupt = ENABLE;                               //÷–∂œ «∑Ò‘ –Ì,   ENABLEªÚDISABLE
 155   1              TIM_InitStructure.TIM_ClkSource = TIM_CLOCK_12T;                        //÷∏∂® ±÷”‘¥,     TIM_CLOCK_1T,TIM_CLOCK_12T,TIM_CLOCK
             -_Ext
 156   1              TIM_InitStructure.TIM_ClkOut    = DISABLE;                              // «∑Ò ‰≥ˆ∏ﬂÀŸ¬ˆ≥Â, ENABLEªÚDISABLE
 157   1              TIM_InitStructure.TIM_Value     =  0x3cb0;//65536UL - (50.0/1000.0 * MAIN_Fosc/12.0);           
 158   1              // //≥ı÷µ,50∫¡√Î“ª¥Œ÷–∂œ.
 159   1              TIM_InitStructure.TIM_Run       = ENABLE;                               // «∑Ò≥ı ºªØ∫Û∆Ù∂Ø∂® ±∆˜, ENABLEªÚDISABLE
 160   1              Timer_Inilize(Timer0,&TIM_InitStructure);                               //≥ı ºªØTimer0    Timer0,Timer1,Timer2
 161   1      
 162   1      }
 163          
 164          
 165          /******************** ÷˜∫Ø ˝**************************/
 166          void main(void)
 167          {
 168   1              //µÕµÁ—πºÏ≤‚±£ª§
 169   1              PCON &= ~LVDF;                  //…œµÁ∫Û–Ë“™«ÂLVD÷–∂œ±Í÷æŒª
 170   1          ELVD = 1;                       // πƒ‹LVD÷–∂œ
 171   1          
 172   1              //io Ω≈≈‰÷√
 173   1              GPIO_config();
 174   1      
 175   1          //»´æ÷±‰¡ø≥ı πªØ
C51 COMPILER V9.00   MAIN                                                                  11/04/2018 22:12:36 PAGE 4   

 176   1              // π§◊˜µ∆ø™ º
 177   1          ioOutForL1Green=ioInKeyForMoto=ioInKeyForTime=1; //keyº¸¿≠∏ﬂ
 178   1      
 179   1          // ‰≥ˆioΩ≈œ»πÿ±’
 180   1          ioOutForL2Red =ioOutForMotoPower = 0;
 181   1      
 182   1          //ioOutForMotoKey=1; //¥•∑¢≈Áœ„ª˙µƒ∞¥º¸ø™πÿ. µÕŒªø™£¨∏ﬂŒªπÿ.
 183   1              
 184   1                 
 185   1          //g_allKeyState = {0,0,0};
 186   1      
 187   1      
 188   1          //ø™∆Ù“˝Ω≈p32 p33µƒÕ‚≤ø÷–∂œ,œ¬Ωµ—ÿ÷–∂œ.
 189   1          EXTI_config();
 190   1          
 191   1              //∂® ±∆˜≈‰÷√ 50ms “ª¥Œ∂® ±£¨∂® ±∆˜¥•∑¢ ±£¨cpuΩ¯»ÎªΩ–— ±∂Œ.
 192   1              Timer_config();
 193   1      
 194   1              EA = 1;
 195   1                       
 196   1              //PrintString("\r\n ø™ ºπ§◊˜¡À... = ");
 197   1      
 198   1              while (1)
 199   1              {
 200   2                      key_scan();
 201   2      
 202   2                              /*
 203   2                      ÷¥––»ŒŒÒ∂Ø◊˜1
 204   2      
 205   2                      “ªÃÏ≈Á ±º‰…Ë÷√Œ™£∫7µ„£¨13µ„£¨19µ„(’˚)
 206   2                      */
 207   2                      switch(g_hour){
 208   3                              case 7:
 209   3                              case 13:
 210   3                              case 19:
 211   3                                  {
 212   4                                          if( g_minute==0 && g_second ==0 && 
 213   4                                          g_millisecond<=100 )
 214   4                                           {
 215   5                                                    motoStart();
 216   5                                              }
 217   4                                  }
 218   3                                  break;
 219   3                                  
 220   3                               default:
 221   3                                  break;
 222   3                          }
 223   2      
 224   2              }
 225   1      }
 226          
 227          /***ƒ⁄≤øπ¶ƒ‹∫Ø ˝***/
 228          
 229          // ∞¥º¸¥¶¿Ìπ¶ƒ‹
 230          void key_scan(void) {
 231   1      
 232   1              if(g_allKeyState.sKeyForMoto == 1) {
 233   2                      //«Âø’‘≠◊¥Ã¨
 234   2                      g_allKeyState.sKeyForMoto = 0;
 235   2      
 236   2                      //¥•∑¢≈Áœ„ª˙π§◊˜
 237   2                      motoStart();
C51 COMPILER V9.00   MAIN                                                                  11/04/2018 22:12:36 PAGE 5   

 238   2                      l2ShowWithNum(l2Num_MotoRun_2);
 239   2                      
 240   2              }
 241   1      /*
 242   1              if(g_allKeyState.sKeyForRun== 1) {
 243   1      
 244   1                      //Õ£÷πAPP‘À––
 245   1                      while(g_allKeyState.sKeyForRun){;};
 246   1                      
 247   1                      //«Âø’‘≠◊¥Ã¨
 248   1                      //g_allKeyState.sKeyForRun = 0;
 249   1              }
 250   1      */
 251   1              if(g_allKeyState.sKeyForTime== 1) {
 252   2                      //«Âø’‘≠◊¥Ã¨
 253   2                      g_allKeyState.sKeyForTime = 0;
 254   2      
 255   2                      //÷ÿ÷√ ±º‰Œ™12µ„.
 256   2                      g_hour = 12;
 257   2                      g_minute=g_second=g_millisecond =0;
 258   2      
 259   2                      l2ShowWithNum(l2Num_TimeRest_1);
 260   2                      
 261   2              }       
 262   1      }
 263          
 264          //¡¡µ∆œÏ”¶
 265          /*
 266          3°¢L1(¬Ãio0)œ‘ æµ±«∞◊¥Ã¨£¨
 267          10√Î…¡“ª¥Œ£¨±Ì æª˙∆˜∂® ±‘À––÷–°£
 268          ≥£¡¡±Ì æµÁ≥ÿ≤ª◊„°£
 269          
 270          L2(∫Ïio1)…¡“ª¥Œ£¨±Ì æ ±º‰Ωœ◊ºÕÍ≥…°£
 271          L2(∫Ï)…¡∂˛¥Œ£¨±Ì æ¥•∑¢≈Áœ„ª˙π§◊˜°£ 
 272          L2(∫Ï)…¡»˝¥Œ£¨±Ì æπÿ±’APP‘À––
 273          */ 
 274          
 275          void l2ShowWithNum(u8 num)
 276          {
 277   1              int i;
 278   1          //PrintString("\r\n l2ShowWithNum.");
 279   1                      
 280   1              for(i=0; i<num; i++)
 281   1              {
 282   2                      delay_ms(100);
 283   2                      ioOutForL2Red = 1;
 284   2                      delay_ms(100);
 285   2                      ioOutForL2Red = 0;
 286   2      
 287   2              }       /**/
 288   1      }       
 289          
 290          /*µÁª˙øÿ÷∆
 291          
 292          1.¥Úø™p34,      (10√Î) ∫Ûπÿ±’(œ‡µ±”⁄ø™πÿµÁ‘¥)
 293          2.µ»¥˝≈Áœ„ª˙∆Ù∂Ø,‘º(1√Î)÷”,º¥8(k_moto_run_time-2)√Î ±∆Ù∂Ø≤Ÿ◊˜.
 294          3.¥Úø™p35, 20us √Îπÿ±’(ƒ£À∆∞¥º¸)
 295          */
 296          void motoStart(void) {
 297   1          //…Ë÷√µÁª˙∆Ù∂Ø±Í÷æ ±º‰÷µ.
 298   1      
 299   1              ioOutForMotoPower = 1; //ø™∆ÙµÁ‘¥
C51 COMPILER V9.00   MAIN                                                                  11/04/2018 22:12:36 PAGE 6   

 300   1              g_moto_run_time = k_moto_run_time; 
 301   1              
 302   1         // PrintString("\r\n motoStart. ");
 303   1      }
 304          
 305          void milliAction(void){
 306   1               
 307   1              if(g_moto_run_time<0){
 308   2      
 309   2                        ioOutForL2Red = 0;
 310   2                        return;
 311   2              }
 312   1              else if(g_moto_run_time<=k_addNum){
 313   2      
 314   2                      g_moto_run_time=-0;
 315   2                      ioOutForL2Red = 0; //πÿµÁª˙‘À––÷∏ æµ∆
 316   2                      //πÿ±’µÁª˙µÁ‘¥
 317   2                       ioOutForMotoPower= 0;
 318   2              }
 319   1              else if(g_moto_run_time>0){
 320   2                      ioOutForL2Red = 1;
 321   2                      g_moto_run_time  -= k_addNum;
 322   2              }
 323   1           return ;   
 324   1      }
 325          
 326          void secondAction(void) {
 327   1              //PrintString("\r\n secondAction... ");
 328   1              //printNowTime();
 329   1          
 330   1              if(g_second%10 == 0){   //π§◊˜÷∏ æµ∆(¬Ã)
 331   2                      ioOutForL1Green = 1;
 332   2                      //delay_ms(200);
 333   2                      
 334   2              }
 335   1          else {
 336   2                  ioOutForL1Green = 0;
 337   2              }
 338   1              
 339   1      }
 340          
 341          
 342          /********************* Timer0÷–∂œ∫Ø ˝************************/
 343          void timer0_int (void) interrupt TIMER0_VECTOR
 344          {
 345   1              g_millisecond += k_addNum;
 346   1      
 347   1         //50m“ª¥Œ.
 348   1              milliAction();
 349   1      
 350   1              if( g_millisecond>= 1000) { //¬˙◊„“ª√Î
 351   2                      g_millisecond = 0;
 352   2              
 353   2                      secondAction();
 354   2                      
 355   2                      g_second++;
 356   2      
 357   2                      if(g_second >=60){
 358   3      
 359   3                              //¬˙◊„“ª∑÷÷”
 360   3                              //mintueAction();
 361   3      
C51 COMPILER V9.00   MAIN                                                                  11/04/2018 22:12:36 PAGE 7   

 362   3                              
 363   3                              g_second =0;
 364   3                              g_minute ++;
 365   3      
 366   3                              if(g_minute >=60){
 367   4      
 368   4                                      //¬˙◊„“ª–° ±
 369   4                                      g_minute =0;
 370   4                                      g_hour ++;
 371   4      
 372   4                                      if(g_hour >=24){
 373   5      
 374   5                                              //¬˙◊„24–° ±
 375   5                                              g_hour =0;
 376   5                              
 377   5                                      }
 378   4                              
 379   4                              }
 380   3                      }
 381   2              }
 382   1      }
 383          
 384          /*
 385          sbit ioInKeyForTime = P3^2; // ±º‰Ωœ◊º∞¥º¸ ‰»Î  int0
 386          sbit ioInKeyForRun  = P3^3;//≥Ã–Ú «∑Ò‘À–– ‰»Î   int1
 387          sbit ioInKeyForMoto =P3^5;//≈Áœ„ª˙¥•∑¢‘À–– ‰»Î  int3
 388          */
 389          
 390          /********************* INT0÷–∂œ∫Ø ˝ *************************/
 391          void INT0_int (void) interrupt INT0_VECTOR              //Ω¯÷–∂œ ±“—æ≠«Â≥˝±Í÷æ
 392          {
 393   1              //WakeUpSource = 1;     //±Íº«INT0ªΩ–—
 394   1              //EX0 = 0;                      //INT0 Disable
 395   1      
 396   1              IE0  = 0;                       //Õ‚÷–∂œ0±Í÷æŒª
 397   1              g_allKeyState.sKeyForMoto= 1;
 398   1              //PrintString("\r\n Õ‚≤ø÷–∂œ0.");
 399   1              while(ioInKeyForMoto==0);
 400   1              EX0 = 1;
 401   1      
 402   1              
 403   1      }
 404          
 405          /********************* INT1÷–∂œ∫Ø ˝ *************************/
 406          void INT1_int (void) interrupt INT1_VECTOR              //Ω¯÷–∂œ ±“—æ≠«Â≥˝±Í÷æ
 407          {
 408   1              //Ω¯»Î÷–∂œ ±£¨ø…“‘∞—int1÷–∂œπÿ±’°£
 409   1              EX1 = 0;        
 410   1              //tfWakeUpSource = 2;   //±Íº«INT1ªΩ–—
 411   1              //EX1 = 0;                      //INT1 Disable
 412   1              IE1  = 0;                       //Õ‚÷–∂œ1±Í÷æŒª
 413   1              g_allKeyState.sKeyForTime= 1;
 414   1              //¥¶¿ÌÕÍ÷–∂œ ¬º˛∫Û£¨ø…“‘∞— int1÷–∂œø™∆Ù£¨∑¿÷π∂‡¥ŒΩ¯»Î°£
 415   1      
 416   1         // PrintString("\r\n Õ‚≤ø÷–∂œ1.—” ±1√Î");
 417   1         // delay_ms(2000);
 418   1               while(ioInKeyForTime==0);
 419   1              EX1 = 1;          //≥Ã–Úº¸◊¥Ã¨÷µ.  0: Œ¥∞¥œ¬  //1:“—∞¥œ¬
 420   1        
 421   1      }
 422          
 423          /********************* INT3÷–∂œ∫Ø ˝ ***********************
C51 COMPILER V9.00   MAIN                                                                  11/04/2018 22:12:36 PAGE 8   

 424          void INT3_int  (void) interrupt INT3_VECTOR
 425          {
 426              PrintString("\r\n Õ‚≤ø÷–∂œ3.—” ±1√Î");
 427          
 428          //
 429              INT_CLKO |=  (1 << 5);  //‘ –Ì÷–∂œ  
 430              INT_CLKO &= ~(1 << 5);  //Ω˚÷π÷–∂œ
 431          ///
 432                  //EX3 = 0;      
 433              //IE1  = 0; 
 434          
 435                  g_allKeyState.sKeyForMoto= 1;
 436          }
 437          */
 438          
 439          ///µÕµÁ—π÷–∂œ∫Ø ˝
 440          //»Áπ˚µÕµÁ—π£¨Ω´             LVD_VECTOR         6
 441          void LVD_ISR() interrupt 6 using 1
 442          {       
 443   1              //
 444   1              ioOutForL2Red   = 1; //≥£¡¡£¨±Ì æµÁ—π≤ª◊„
 445   1              ioOutForL1Green= 0; //œ®µ∆
 446   1              ioOutForMotoPower =0; //«ø÷∆Õ£÷π‘À◊™.
 447   1      
 448   1              PCON &= ~LVDF;                  //œÚPCON.5–¥0«ÂLVD÷–∂œ
 449   1      
 450   1              //PCON |= 0x02;               //Ω¯»ÎµÙµÁƒ£ Ω
 451   1      }
 452          
 453          
 454          
 455          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    461    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      9      16
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
